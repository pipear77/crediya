dependencies {
    implementation project(':usecase')
    implementation project(':model')

    // WebFlux + Actuator + Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // VALIDATION (Jakarta)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // OpenAPI/Swagger para WebFlux (SpringDoc 2.x)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'

    // Fuerza API/Models si tu repos resuelven raro (opcional pero útil aquí)
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.21'
    implementation 'io.swagger.core.v3:swagger-models:2.2.21'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
    options.encoding = 'UTF-8'
}
